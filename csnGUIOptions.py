#!/usr/bin/env python
# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.6.3 on Tue Mar 11 18:50:25 2008

import wx

# begin wxGlade: extracode
# end wxGlade

class CSnakeOptionsFrame(wx.Frame):
    """
    Frame where the user can edit application options.
    """
    def __init__(self, *args, **kwds):
        # begin wxGlade: CSnakeOptionsFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.sizer_4_staticbox = wx.StaticBox(self, -1, "Compiler")
        self.cmbCompiler = wx.ComboBox(self, -1, choices=["Visual Studio 7 .NET 2003", "Visual Studio 8 2005", "Visual Studio 8 2005 Win64", "KDevelop3", "Unix Makefiles"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.button_1 = wx.Button(self, -1, "Set path to CMake")
        self.txtCMakePath = wx.TextCtrl(self, -1, "")
        self.btnClose = wx.Button(self, -1, "Close")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMBOBOX, self.OnSelectCompiler, self.cmbCompiler)
        self.Bind(wx.EVT_BUTTON, self.OnSetCMakePath, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.OnClose, self.btnClose)
        # end wxGlade

    def ShowOptions(self, _options = None):
        """
        If _options is not None, then sets _options as the options edited by this frame.
        Displays the current options.
        """
        if not _options is None:
            self.options = _options
        self.txtCMakePath.SetValue(self.options.cmakePath)
        count = 0
        for compiler in self.cmbCompiler.GetStrings():
            if compiler == self.options.compiler:
                self.cmbCompiler.SetSelection(count)
            count = count + 1
        
    def __set_properties(self):
        # begin wxGlade: CSnakeOptionsFrame.__set_properties
        self.SetTitle("CSnakeGUI Options")
        self.cmbCompiler.SetSelection(-1)
        self.txtCMakePath.SetMinSize((20,20))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CSnakeOptionsFrame.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.HORIZONTAL)
        sizer_4.Add(self.cmbCompiler, 1, wx.EXPAND, 0)
        sizer_3.Add(sizer_4, 0, wx.EXPAND, 0)
        sizer_5.Add(self.button_1, 0, 0, 0)
        sizer_5.Add(self.txtCMakePath, 1, 0, 0)
        sizer_3.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 0, wx.EXPAND, 0)
        sizer_2.Add(self.btnClose, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def OnSetCMakePath(self, event): # wxGlade: CSnakeOptionsFrame.<event_handler>
        """
        Let the user select where CSnake is located.
        """
        dlg = wx.FileDialog(None, "Select path to CMake")
        if dlg.ShowModal() == wx.ID_OK:
            self.options.cmakePath = dlg.GetPath()
            self.ShowOptions()

    def OnSelectCompiler(self, event): # wxGlade: CSnakeOptionsFrame.<event_handler>
        """
        Let the user select the compiler.
        """
        self.options.compiler = self.cmbCompiler.GetValue()
        self.ShowOptions()

    def OnClose(self, event): # wxGlade: CSnakeOptionsFrame.<event_handler>
        self.options.cmakePath = self.txtCMakePath.GetValue()
        self.MakeModal(0)
        self.Destroy()

# end of class CSnakeOptionsFrame


class Options:
    def __init__(self):
        self.cmakePath = "CMake"    
        self.compiler = "Visual Studio 7 .NET 2003"
        self.currentGUISettingsFilename = ""    

if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = (None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
